# --- 기존 설정 (그대로 사용) ---
pos_LEFT_UP = posx(254.16,143.85,22.89,1.29,180,1.62)
pos_LEFT_DOWN = posx(250.81,41.05,28.18,4.68,180,5.00)
pos_RIGHT_UP = posx(357.81,142.63,25.27,3.12,180,3.45)
pos_RIGHT_DOWN = posx(352.59,40.75,23.65,4.45,-180,4.78)

# Z축으로 200mm 위에서 접근/후퇴하기 위한 상대 좌표
# 이름을 좀 더 알기 쉽게 바꿔봤어!
pos_APPROACH_OFFSET = posx(0, 0, 200, 0, 0, 0)

direction = 0
row = 3
column = 3
stack = 1
thickness = 0
point_offset = [0,0,0]

total_count = row * column * stack


# --- 메인 루프 (이동 코드 추가) ---
for pallet_index in range(0, total_count):
    # 1. 팔레트 위치 계산
    # (변수명은 지난번에 얘기한 대로 바꿔서 적용했어!)
    Pallet_Pose = get_pattern_point(pos_LEFT_UP, pos_RIGHT_UP, pos_LEFT_DOWN, pos_RIGHT_DOWN, pallet_index, direction, row, column, stack, thickness, point_offset)
    
    # 2. 접근 위치 계산 (Pallet_Pose의 200mm 위)
    Approach_Pose = trans(Pallet_Pose, pos_APPROACH_OFFSET, ref=DR_BASE)

    tp_popup("인덱스 {}번 위치로 이동합니다.".format(pallet_index))

    # 3. 로봇 이동
    movel(Approach_Pose, vel=150, acc=300)      # a. 접근 위치로 이동
    movel(Pallet_Pose, vel=100, acc=200)         # b. 최종 목적지로 이동
    
    # --- 여기서 그리퍼(Gripper) 작동 등 실제 작업을 수행하면 돼! ---
    wait(1)  # 그리퍼가 동작할 시간을 주는 예시
    
    movel(Approach_Pose, vel=150, acc=300)      # c. 다시 접근 위치로 후퇴
